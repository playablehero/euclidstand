<?xml version="1.0" ?>
<project name="EuclidsLastStand" default="build">
	<property name="dir.src" value="src" />
	<property name="dir.test" value="test" />
	<property name="dir.build" value="bin" />
	<property name="dir.temp" value="temp" />
	<property name="dir.lib" value="lib" />
	<property name="dir.dist" value="dist" />

	<property name="lib.debug" value="${dir.lib}/debug" />
	<property name="lib.test" value="${dir.lib}/test" />
	<property name="lib.natives" value="${dir.lib}/natives" />
	<property name="lib.release" value="${dir.lib}/release" />

	<property name="main" value="euclidstand.EuclidStand" />
	<property name="jarfile" value="euclidstand.jar" />
	<property name="distfile" value="euclidstand.zip" />
	
	<path id="classpath">
		<pathelement location="." />
		<pathelement location="${dir.build}" />
		<fileset dir="${dir.lib}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.debug}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
		<path refid="classpath" />
		<fileset dir="${lib.test}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="init">
		<mkdir dir="${dir.build}" />
	</target>

	<target name="clean">
		<delete dir="${dir.build}" />
		<delete dir="${dir.temp}" />
		<delete dir="${dir.dist}" />
	</target>

	<target name="build" depends="init">
		<javac srcdir="${dir.src}" destdir="${dir.build}">
			<classpath refid="classpath" />
		</javac>
	</target>
	
	<target name="build_test" depends="build">
		<javac srcdir="${dir.test}" destdir="${dir.build}">
			<classpath refid="test.classpath" />
		</javac>
	</target>
	
	<target name="run" depends="build">
		<java fork="yes" spawn="no" classname="${main}">
			<classpath refid="classpath" />
			<jvmarg value="-Djava.library.path=${lib.natives}" />
		</java>
	</target>

	<target name="test" depends="build_test">
		<junit fork="yes" printsummary="yes" haltonerror="yes">
			<formatter type="brief" usefile="false" />
			<classpath refid="test.classpath" />
			<batchtest>
				<fileset dir="${dir.build}">
					<include name="**/*Test.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="dist" depends="clean, build">
		<mkdir dir="${dir.temp}" />
		<copy todir="${dir.temp}/media">
			<fileset dir="media"/>
		</copy>
		<copy todir="${dir.temp}/${dir.lib}">
			<fileset dir="${dir.lib}">
				<include name="*.jar"/>
				<include name="*release*/*"/>
				<include name="*launcher*/*"/>
				<include name="*natives*/*"/>
			</fileset>
		</copy>
		<copy todir="${dir.temp}">
			<fileset file="launcher.xml"/>
			<fileset file="commons-launcher.jar"/>
			<fileset file="demo.sh"/>
			<fileset file="demo.bat"/>
			<fileset file="README"/>
			<fileset file="launcher.properties"/>
			<fileset file="LauncherBootstrap.class"/>
		</copy>
		<jar destfile="${dir.temp}/${dir.lib}/${jarfile}">
			<fileset dir="${dir.build}"/>
		</jar>
		<mkdir dir="${dir.dist}" />
		<zip destfile="${dir.dist}/${distfile}" >
			<zipfileset dir="${dir.temp}" prefix="euclidstand" />
		</zip>
		<!--delete dir="${dir.temp}" /-->
	</target>
</project>

